{"version":3,"sources":["views/Pets.js","views/AddPet.js","views/PetDetails.js","views/EditPet.js","App.js","serviceWorker.js","index.js"],"names":["Header","styled","h1","Pets","useState","pets","setPets","useEffect","axios","get","then","res","data","catch","console","log","style","marginTop","backgroundColor","color","fontWeight","className","class","to","scope","map","pet","idx","key","name","petType","_id","onClick","event","idToDel","delete","filteredPets","filter","h3","AddPet","props","setName","setPetType","description","setDescription","firstSkill","setFirstSkill","secondSkill","setSecondSkill","thirdSkill","setThirdSkill","errors","setErrors","onSubmit","preventDefault","newPet","post","navigate","err","response","onChange","target","value","type","message","PetDetails","id","setPet","msg","setMsg","alreadyLiked","setAlreadyLiked","handleLike","isUpvote","likeCount","dislikeCount","put","updatedPet","width","height","src","alt","EditPet","editedPet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.33d3d2d8.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport styled from \"styled-components\";\nimport { Link } from \"@reach/router\";\n\nconst Header = styled.h1`\n    display: inline-block;\n`;\n\nconst Pets = () => {\n    const [pets, setPets] = useState([]);\n\n    useEffect(() => {\n        axios\n            .get(\"http://localhost:8000/api/pets\")\n            .then(res => setPets(res.data))\n            .catch(console.log);\n    }, []);\n\n    const handleDelete = idToDel => {\n        axios\n            .delete(\"http://localhost:8000/api/pets/\" + idToDel)\n            .then(res => {\n                const filteredPets = pets.filter(pet => pet._id !== idToDel);\n                setPets(filteredPets);\n            })\n            .catch(console.log);\n    };\n\n    return (\n        <>\n            <div style={{marginTop: \"30%\"}}>\n                <Header style={{backgroundColor: \"rgba(0,0,0, 0.75)\",\n            color: \"white\",\n            fontWeight: \"bold\"}} className=\"card-header\">These pets are looking for a good home</Header>\n            </div>\n            <br/>\n            <div class=\"text-right\">\n                <button class=\"btn btn-primary\">\n                    <Link class=\"text-light\" to=\"/pets/new\">Add a pet</Link>\n                </button>\n            </div>\n            <br />\n            <div>\n                <table class=\"table table-dark table-hover table-striped\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Animal Type</th>\n                            <th scope=\"col\">Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {pets\n                            .map((pet, idx) => (\n                                <tr key={idx}>\n                                    <td>{pet.name}</td>\n                                    <td>{pet.petType}</td>\n                                    <td>\n                                        <Link class=\"btn btn-success\" to={\"/pets/\" + pet._id}>Details</Link> |{\" \"}\n                                        <Link class=\"btn btn-warning\" to={\"/pets/\" + pet._id + \"/edit\"}>Edit</Link> |{\" \"}\n                                        <button class=\"btn btn-danger\" onClick={event => handleDelete(pet._id)}>\n                                            Delete\n                                        </button>\n                                    </td>\n                                </tr>\n                            ))}\n                    </tbody>\n                </table>\n            </div>\n        </>\n    );\n};\n\nexport default Pets;","import React, { useState } from \"react\";\nimport { navigate, Link } from \"@reach/router\";\nimport axios from \"axios\";\nimport styled from 'styled-components'\n\nconst Header = styled.h3`\n    display: inline-block;\n`;\n\n\nconst AddPet = props => {\n    const [name, setName] = useState(\"\");\n    const [petType, setPetType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [firstSkill, setFirstSkill] = useState(\"\");\n    const [secondSkill, setSecondSkill] = useState(\"\");\n    const [thirdSkill, setThirdSkill] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        const newPet = {\n            // long-form\n            name: name,\n            // shorthand because key name and value stored in matching var name\n            petType,\n            description,\n            firstSkill,\n            secondSkill,\n            thirdSkill,\n        };\n\n        axios\n            .post(\"http://localhost:8000/api/pets\", newPet)\n            .then(res => {\n                navigate(\"/\");\n            })\n            .catch(err => {\n                setErrors(err.response.data.errors);\n            });\n    };\n\n    return (\n        <div>\n            <div class=\"text-right\">\n                <button class=\"btn btn-primary\">\n                    <Link class=\"text-light\" to=\"/\">Home</Link>\n                </button>\n            </div>\n            <br/>\n            <div>\n                <Header style={{backgroundColor: \"rgba(0,0,0, 0.75)\",\n            color: \"white\",\n            fontWeight: \"bold\"}} className=\"card-header\">Do you know a pet who needs a home?</Header>\n            </div>\n            <br/>\n            <form onSubmit={handleSubmit}>\n                <div class=\"form-group\">\n                    <label>Pet Name:</label>\n                    <input class=\"form-control\" onChange={event => setName(event.target.value)} type=\"text\" />\n                    {errors.name ? (\n                        <span className=\"error\">{errors.name.message}</span>\n                    ) : (\n                            \"\"\n                        )}\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Pet Type:</label>\n                    <input class=\"form-control\"\n                        onChange={event => setPetType(event.target.value)}\n                        type=\"text\"\n                    />\n                    {errors.petType ? (\n                        <span className=\"error\">{errors.petType.message}</span>\n                    ) : (\n                            \"\"\n                        )}\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Pet Discription:</label>\n                    <textarea  class=\"form-control\"\n                        onChange={event => setDescription(event.target.value)}\n                        type=\"text\"\n                    />\n                    {errors.description ? (\n                        <span className=\"error\">{errors.description.message}</span>\n                    ) : (\n                            \"\"\n                        )}\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Skill 1: </label>\n                    <input class=\"form-control\"\n                        onChange={event => setFirstSkill(event.target.value)}\n                        type=\"text\"\n                    />\n                    {errors.firstSkill ? (\n                        <span className=\"error\">{errors.firstSkill.message}</span>\n                    ) : (\n                            \"\"\n                        )}\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Skill 2: </label>\n                    <input class=\"form-control\"\n                        onChange={event => setSecondSkill(event.target.value)}\n                        type=\"text\"\n                    />\n                    {errors.secondSkill ? (\n                        <span className=\"error\">{errors.secondSkill.message}</span>\n                    ) : (\n                            \"\"\n                        )}\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Skill 3: </label>\n                    <input class=\"form-control\"\n                        onChange={event => setThirdSkill(event.target.value)}\n                        type=\"text\"\n                    />\n                    {errors.thirdSkill ? (\n                        <span className=\"error\">{errors.thirdSkill.message}</span>\n                    ) : (\n                            \"\"\n                        )}\n                </div>\n\n                <div class=\"text-right\">\n                    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default AddPet;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"@reach/router\";\nimport styled from 'styled-components'\n\nconst Header = styled.h3`\n    display: inline-block;\n`;\n\n// id prop comes from the URL, see routing :id\nconst PetDetails = ({ id }) => {\n    const [pet, setPet] = useState(null);\n    const [msg, setMsg] = useState(\"loading...\");\n    const [alreadyLiked, setAlreadyLiked] = useState(false);\n\n    useEffect(() => {\n        axios\n            .get(\"http://localhost:8000/api/pets/\" + id)\n            .then(res => setPet(res.data))\n            .catch(setMsg(\"Sumtin Wrong\"));\n    }, [id]);\n\n    const handleLike = isUpvote => {\n        if (alreadyLiked) {\n            return;\n        }\n\n        if (isUpvote) {\n            pet.likeCount++;\n        } else {\n            pet.dislikeCount++;\n        }\n\n        axios\n            .put(\"http://localhost:8000/api/pets/\" + id, pet)\n            .then(res => {\n                const updatedPet = res.data;\n                setPet(updatedPet);\n                setAlreadyLiked(true);\n            })\n            .catch(console.log);\n    };\n\n    if (pet === null) {\n        return msg;\n    }\n\n    return (\n        <div className=\"text-center\">\n            <div class=\"text-right\">\n                <button class=\"btn btn-primary\">\n                    <Link class=\"text-light\" to=\"/\">Home</Link>\n                </button>\n            </div>\n            <br/>\n            <div>\n                <Header style={{backgroundColor: \"rgba(0,0,0, 0.75)\",\n            color: \"white\",\n            fontWeight: \"bold\"}} className=\"card-header\">Learn more about {pet.name}!</Header>\n            </div>\n            <br/>\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col border bg-dark text-white\">Pet Type</div>\n                    <div class=\"col border bg-dark text-white\">Description</div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col border bg-dark text-white\">{pet.petType}</div>\n                    <div class=\"col border bg-dark text-white\">{pet.description}</div>\n                </div>\n            </div>\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col border bg-dark text-white\">Skills</div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col border bg-dark text-white\">{pet.firstSkill}</div>\n                    <div class=\"col border bg-dark text-white\">{pet.secondSkill}</div>\n                    <div class=\"col border bg-dark text-white\">{pet.thirdSkill}</div>\n                </div>\n            </div>\n            <span onClick={event => handleLike(true)} className=\"arrow\">\n                {pet.likeCount}<img style={{width:70, height: 70}} src=\"https://media.istockphoto.com/vectors/cartoon-cute-dog-giving-thumbs-up-vector-id1131055434?k=6&m=1131055434&s=170667a&w=0&h=udxkXKRWjAc-E-ydL5FRwArXD0ukfrz9yUWf_VsbxM8=\" alt=\"\"/>{\" \"}\n            </span>\n            <span onClick={event => handleLike(false)} className=\"arrow\">\n                {pet.dislikeCount}<img style={{width:70, height: 70}} src=\"https://i.pinimg.com/originals/40/6d/4c/406d4c6a43f03a54288685fda8351d85.jpg\" alt=\"\"/>\n            </span>\n        </div>\n    );\n};\n\nexport default PetDetails;","import React, { useEffect, useState } from \"react\";\nimport { navigate, Link } from \"@reach/router\";\nimport axios from \"axios\";\nimport styled from 'styled-components'\n\nconst Header = styled.h3`\n    display: inline-block;\n`;\n\nconst EditPet = props => {\n    console.log(props);\n    const [name, setName] = useState(\"\");\n    const [petType, setPetType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [firstSkill, setFirstSkill] = useState(\"\");\n    const [secondSkill, setSecondSkill] = useState(\"\");\n    const [thirdSkill, setThirdSkill] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    useEffect(() => {\n        axios\n            .get(\"http://localhost:8000/api/pets/\" + props.id)\n            .then(res => {\n                const pet = res.data;\n\n                setName(pet.name);\n                setPetType(pet.petType);\n                setDescription(pet.description);\n                setFirstSkill(pet.firstSkill);\n                setSecondSkill(pet.secondSkill);\n                setThirdSkill(pet.thirdSkill);\n            })\n            .catch(console.log);\n    }, [props.id]);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        const editedPet = {\n            // long-form\n            name: name,\n            // shorthand because key name and value stored in matching var name\n            petType,\n            description,\n        };\n\n        axios\n            .put(\"http://localhost:8000/api/pets/\" + props.id, editedPet)\n            .then(res => navigate(\"/pets/\" + res.data._id))\n            .catch(err => {\n                setErrors(err.response.data.errors);\n            });\n    };\n\n    return (\n        <div>\n            <div class=\"text-right\">\n                <button class=\"btn btn-primary\">\n                    <Link class=\"text-light\" to=\"/\">Home</Link>\n                </button>\n            </div>\n            <br/>\n            <div>\n                <Header style={{backgroundColor: \"rgba(0,0,0, 0.75)\",\n            color: \"white\",\n            fontWeight: \"bold\"}} className=\"card-header\">Update {name}'s profile!</Header>\n            </div>\n            <br/>\n            <form onSubmit={handleSubmit}>\n                <div class=\"form-group\">\n                    <label>Name: </label>\n                    <input class=\"form-control\"\n                        onChange={event => setName(event.target.value)}\n                        value={name}\n                        type=\"text\"\n                    />\n                    {errors.name ? (\n                        <span className=\"error\">{errors.name.message}</span>\n                    ) : (\n                            \"\"\n                        )}\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Pet Type: </label>\n                    <input class=\"form-control\"\n                        onChange={event => setPetType(event.target.value)}\n                        value={petType}\n                        type=\"text\"\n                    />\n                    {errors.petType ? (\n                        <span className=\"error\">{errors.petType.message}</span>\n                    ) : (\n                            \"\"\n                        )}\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Description: </label>\n                    <textarea class=\"form-control\"\n                        onChange={event => setDescription(event.target.value)}\n                        value={description}\n                        type=\"text\"\n                    ></textarea>\n                </div>\n\n                <div class=\"form-group\">\n                    <label>First Skill: </label>\n                    <input class=\"form-control\"\n                        onChange={event => setFirstSkill(event.target.value)}\n                        value={firstSkill}\n                        type=\"text\"\n                    ></input>\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Second Skill: </label>\n                    <input class=\"form-control\"\n                        onChange={event => setSecondSkill(event.target.value)}\n                        value={secondSkill}\n                        type=\"text\"\n                    ></input>\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Third Skill: </label>\n                    <input class=\"form-control\"\n                        onChange={event => setThirdSkill(event.target.value)}\n                        value={thirdSkill}\n                        type=\"text\"\n                    ></input>\n                </div>\n\n                <div class=\" text-right\">\n                    <button type=\"submit\" class=\"btn btn-success\">Edit</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default EditPet;","import React from \"react\";\nimport \"./App.css\";\nimport { Router } from \"@reach/router\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nimport Pets from \"./views/Pets\";\nimport AddPet from \"./views/AddPet\";\nimport PetDetails from \"./views/PetDetails\";\nimport EditPet from \"./views/EditPet\";\n\n// test\n\nfunction App() {\n  return (\n    <>\n      <body>\n        <h1 className=\"container-flex justify-content-center card-header shadow-lg p-5\" \n          style={{\n            backgroundColor: \"rgba(0,0,0, 0.65)\",\n            color: \"white\",\n            fontWeight: \"bold\"}}>\n          Pet Shelter\n        </h1>\n        <div className=\"container-flex justify-content-center\">\n          <Router>\n          <Pets path=\"/\" />\n          <AddPet path=\"/pets/new\" />\n          <PetDetails path=\"/pets/:id\" />\n          <EditPet path=\"/pets/:id/edit\" />\n          </Router>\n        </div>\n      </body>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}